services:
  collect_data:
    build:
      context: .
      dockerfile: server-collect_data/Dockerfile
    volumes:
      - ./server-collect_data:/app/server-collect_data
      - ./shared:/app/shared
      - ./.env:/app/.env
    environment:
      - PYTHONPATH=/app:/app/server-collect_data
      - TZ=Asia/Seoul
    command: python server-collect_data/fetcher/main_fetch.py
    depends_on:
      - db
    restart: always
    networks:
      - trading_net

  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - trading_net

  query:
    build:
      context: .
      dockerfile: server-query/Dockerfile
    volumes:
      - ./server-query:/app/server-query
      - ./shared:/app/shared
      - ./.env:/app/.env
    environment:
      - PYTHONPATH=/app:/app/server-query
      - TZ=Asia/Seoul
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: always
    networks:
      - trading_net

  frontend:
    build:
      context: .
      dockerfile: server-frontend/Dockerfile
    volumes:
      - ./server-frontend:/app/server-frontend
      - ./shared:/app/shared
    environment:
      - TZ=Asia/Seoul
      - PYTHONPATH=/app:/app/server-frontend
      - API_URL=http://query:8000
    ports:
      - "8501:8501"
    depends_on:
      - query
    restart: always
    networks:
      - trading_net

volumes:
  pgdata:

networks:
  trading_net: